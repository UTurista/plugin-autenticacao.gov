package pt.gov.autenticacao.dialogs.hardware;

import java.awt.Desktop;
import java.awt.Dialog;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.io.IOException;
import java.net.URI;
import java.net.URISyntaxException;
import java.util.Locale;
import java.util.ResourceBundle;
import javax.swing.JLabel;
import javax.swing.Timer;
import org.poreid.common.Util;
import pt.gov.autenticacao.Agente;
import pt.gov.autenticacao.dialogs.NotifyOption;
import pt.gov.autenticacao.util.Utilities;

/**
 *
 * @author Rui Martinho (rui.martinho@ama.pt)
 */
public class MissingHardwareDialog extends javax.swing.JDialog {
    private final ResourceBundle bundle;
    private final DialogType type;
    private final NotifyOption notify;
    private final boolean showHelp;
    
    public enum DialogType {

        MISSING_CARD("dialog.title.missing.card.label", "missing.card.message", "missing.card.help.message", "missing.card.help.link", "#dificuldades&lnd"),
        MISSING_READER("dialog.title.missing.reader.label", "missing.reader.message", "missing.reader.help.message", "missing.reader.help.link", "#dificuldades&cnd");

        private final String label;
        private final String message;
        private final String help;
        private final String hash;
        private final String linkMsg;

        private DialogType(String label, String message, String help, String linkMsg,String hash) {
            this.message = message;
            this.label = label;
            this.help = help;
            this.hash = hash;
            this.linkMsg = linkMsg;
        }

        public String getMessage() {
            return message;
        }

        public String getLabel() {
            return label;
        }
        
        public String getHelp(){
            return help;
        }
        
        public String getHash(){
            return hash;
        }
        
        public String getLinkMsg(){
            return linkMsg;
        }
    }
    
    
    /**
     * Creates new form MissingHardwareDialog
     * @param type
     * @param notify
     * @param locale
     * @param delay
     * @param showHelp
     */
    public MissingHardwareDialog(DialogType type, NotifyOption notify, Locale locale, long delay, boolean showHelp){
        super((Dialog)null, true);
        
        setIconImages(Util.getIconImages());
        
        bundle = ResourceBundle.getBundle(MissingHardwareDialog.class.getSimpleName(),locale);
        this.setTitle(bundle.getString(type.getLabel()));  
        this.setAlwaysOnTop(true);
        
        this.notify = notify;
        this.type = type;
        this.showHelp = showHelp;
        
        initComponents();
        displayHelpLink(link);
        
        Timer timer = new Timer((int) (115*1000-delay*1000), new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                MissingHardwareDialog.this.notify.action(NotifyOption.ActionType.TIMEOUT);
                MissingHardwareDialog.this.dispose();
            }
        });
        timer.setRepeats(false);
        timer.start();
        
        addWindowListener(new java.awt.event.WindowAdapter() {
            @Override
            public void windowClosing(java.awt.event.WindowEvent e) {
                MissingHardwareDialog.this.notify.action(NotifyOption.ActionType.CANCEL);
                dispose();
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form
     * Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        progressButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        message = new javax.swing.JLabel();
        link = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        jPanel1.setOpaque(false);
        jPanel1.setLayout(new java.awt.GridLayout(1, 0, 50, 0));

        progressButton.setFont(progressButton.getFont().deriveFont(progressButton.getFont().getSize()-1f));
        progressButton.setText(showHelp ? bundle.getString("help.button.label") : bundle.getString("progress.button.label"));
        progressButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                progressButtonActionPerformed(evt);
            }
        });
        jPanel1.add(progressButton);

        cancelButton.setFont(cancelButton.getFont().deriveFont(cancelButton.getFont().getSize()-1f));
        cancelButton.setText(bundle.getString("cancel.button.label"));
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });
        jPanel1.add(cancelButton);

        message.setFont(message.getFont().deriveFont(message.getFont().getSize()-1f));

        link.setFont(link.getFont().deriveFont(link.getFont().getSize()-1f));
        link.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        link.setText(bundle.getString(type.getLinkMsg()));
        link.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(link, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 297, Short.MAX_VALUE)
                            .addComponent(message, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(15, 15, 15))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(message)
                .addGap(15, 15, 15)
                .addComponent(link)
                .addGap(15, 15, 15)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15))
        );

        message.setText(showHelp ? bundle.getString(type.getHelp()) : bundle.getString(type.getMessage()));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void progressButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_progressButtonActionPerformed
        if (showHelp) {
            try {
                Desktop.getDesktop().browse(new URI(Agente.HELP.getHelpPageLocation()+type.getHash()));
            } catch (URISyntaxException | IOException ignore) {
            }
            notify.action(NotifyOption.ActionType.HELP);
            dispose();
        } else {
            notify.action(NotifyOption.ActionType.PROGRESS);
            dispose();
        }
    }//GEN-LAST:event_progressButtonActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        notify.action(NotifyOption.ActionType.CANCEL);
        dispose();
    }//GEN-LAST:event_cancelButtonActionPerformed

    
    private void displayHelpLink(JLabel website) {
        website.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                try {
                    Utilities.browse(new URI(Agente.HELP.getHelpPageLocation() + type.getHash()));
                } catch (URISyntaxException ignore) {
                }
                notify.action(NotifyOption.ActionType.HELP);
                dispose();
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelButton;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel link;
    private javax.swing.JLabel message;
    private javax.swing.JButton progressButton;
    // End of variables declaration//GEN-END:variables
}
